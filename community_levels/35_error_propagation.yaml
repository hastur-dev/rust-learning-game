name: "Level 35 - Error Propagation (?)"
grid_size: "25x20"
start_position: [1, 1]
max_turns: 0
fog_of_war: true
income_per_square: 1

obstacles: 35
enemies:
  - start_location: [23, 18]
    movement_pattern: "horizontal"
    moving_positive: false
  - start_location: [24, 31]
    movement_pattern: "vertical"
    moving_positive: true
  - start_location: [22, 32]
    movement_pattern: "circular"
    moving_positive: true
  - start_location: [24, 28]
    movement_pattern: "horizontal"
    moving_positive: false
  - start_location: [24, 28]
    movement_pattern: "vertical"
    moving_positive: true
  - start_location: [23, 25]
    movement_pattern: "circular"
    moving_positive: false
  - start_location: [24, 32]
    movement_pattern: "horizontal"
    moving_positive: true
  - start_location: [21, 26]
    movement_pattern: "vertical"
    moving_positive: false

doors:
  - [23, 34]
  - [23, 33]
  - [24, 30]
  - [23, 29]
  - [24, 32]
  - [24, 23]
  - [23, 30]

items:
  - name: "question_mark_operator_tip"
    item_file: "items/question_mark_operator.rs"
    spawn_randomly: false
    location: [24, 33]
  - name: "try_operator_tip"
    item_file: "items/try_operator.rs"
    spawn_randomly: false
    location: [23, 31]
  - name: "early_returns_tip"
    item_file: "items/early_returns.rs"
    spawn_randomly: false
    location: [24, 35]
  - name: "error_context_propagation_tip"
    item_file: "items/error_context_propagation.rs"
    spawn_randomly: false
    location: [24, 28]
  - name: "main_result_tip"
    item_file: "items/main_result.rs"
    spawn_randomly: false
    location: [23, 27]
  - name: "anyhow_tip"
    item_file: "items/anyhow.rs"
    spawn_randomly: false
    location: [24, 25]
  - name: "goal_item"
    item_file: "items/level_complete.rs"
    spawn_randomly: false
    location: [24, 33]

message: "Master error propagation with the ? operator! Learn to chain fallible operations elegantly, propagate errors up the call stack, and use libraries like anyhow for error context."

hint_message: "Error propagation: ? operator automatically returns Err or unwraps Ok. Works with Result and Option. main() can return Result. anyhow provides easy error context and chaining."