name: "Level 30 - RAII Pattern"
grid_size: "25x20"
start_position: [1, 1]
max_turns: 0
fog_of_war: true
income_per_square: 1

obstacles: 30
enemies:
  - start_location: [23, 18]
    movement_pattern: "horizontal"
    moving_positive: false
  - start_location: [24, 26]
    movement_pattern: "vertical"
    moving_positive: true
  - start_location: [22, 27]
    movement_pattern: "circular"
    moving_positive: false
  - start_location: [24, 23]
    movement_pattern: "horizontal"
    moving_positive: true
  - start_location: [24, 23]
    movement_pattern: "vertical"
    moving_positive: false
  - start_location: [23, 20]
    movement_pattern: "circular"
    moving_positive: true
  - start_location: [20, 27]
    movement_pattern: "horizontal"
    moving_positive: false
  - start_location: [16, 21]
    movement_pattern: "vertical"
    moving_positive: true

doors:
  - [23, 29]
  - [23, 28]
  - [24, 25]
  - [23, 24]
  - [24, 27]
  - [22, 20]
  - [18, 25]

items:
  - name: "raii_concept_tip"
    item_file: "items/raii_concept.rs"
    spawn_randomly: false
    location: [24, 28]
  - name: "constructor_destructor_tip"
    item_file: "items/constructor_destructor.rs"
    spawn_randomly: false
    location: [23, 26]
  - name: "scope_based_cleanup_tip"
    item_file: "items/scope_based_cleanup.rs"
    spawn_randomly: false
    location: [24, 30]
  - name: "lock_guards_tip"
    item_file: "items/lock_guards.rs"
    spawn_randomly: false
    location: [24, 23]
  - name: "file_handles_tip"
    item_file: "items/file_handles.rs"
    spawn_randomly: false
    location: [23, 22]
  - name: "raii_patterns_tip"
    item_file: "items/raii_patterns.rs"
    spawn_randomly: false
    location: [24, 20]
  - name: "goal_item"
    item_file: "items/level_complete.rs"
    spawn_randomly: false
    location: [24, 28]

message: "Master RAII (Resource Acquisition Is Initialization)! This fundamental pattern ties resource lifetime to object lifetime. Resources are acquired in constructors and automatically released in destructors."

hint_message: "RAII: Resources tied to object lifetime. Acquire in new()/from(), release in Drop. Examples: File, Mutex, Vec. Guarantees cleanup even with panics. Scope-based resource management prevents leaks."