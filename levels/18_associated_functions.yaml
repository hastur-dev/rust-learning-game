name: "Level 18 - Associated Functions"
grid_size: "25x18"
start_position: [1, 1]
max_turns: 0
fog_of_war: true
income_per_square: 1

obstacles: 18
enemies:
  - start_location: [23, 16]
    movement_pattern: "horizontal"
    moving_positive: false
  - start_location: [19, 14]
    movement_pattern: "vertical"
    moving_positive: true
  - start_location: [22, 15]
    movement_pattern: "circular"
    moving_positive: false
  - start_location: [15, 17]
    movement_pattern: "horizontal"
    moving_positive: true
  - start_location: [12, 11]
    movement_pattern: "vertical"
    moving_positive: false
  - start_location: [21, 8]
    movement_pattern: "circular"
    moving_positive: true
  - start_location: [8, 15]
    movement_pattern: "horizontal"
    moving_positive: false

doors:
  - [20, 17]
  - [23, 16]
  - [17, 17]
  - [23, 12]
  - [13, 15]
  - [10, 17]
  - [6, 13]

items:
  - name: "constructor_functions_tip"
    item_file: "items/constructor_functions.rs"
    spawn_randomly: false
    location: [17, 16]
  - name: "new_convention_tip"
    item_file: "items/new_convention.rs"
    spawn_randomly: false
    location: [23, 14]
  - name: "static_methods_tip"
    item_file: "items/static_methods.rs"
    spawn_randomly: false
    location: [23, 18]
  - name: "namespace_functions_tip"
    item_file: "items/namespace_functions.rs"
    spawn_randomly: false
    location: [15, 17]
  - name: "double_colon_tip"
    item_file: "items/double_colon.rs"
    spawn_randomly: false
    location: [21, 10]
  - name: "factory_methods_tip"
    item_file: "items/factory_methods.rs"
    spawn_randomly: false
    location: [12, 17]
  - name: "goal_item"
    item_file: "items/level_complete.rs"
    spawn_randomly: false
    location: [22, 16]

message: "Learn functions that belong to types but don't take self! Associated functions are called with :: syntax and are perfect for constructors and utility functions. Master the 'new' convention and factory patterns."

hint_message: "Associated functions: No self parameter, called with Type::function(). Common pattern: fn new() -> Self for constructors. Use :: syntax, not . (dot). Great for factory methods and utilities."