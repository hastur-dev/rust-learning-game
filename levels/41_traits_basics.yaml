name: "Level 41 - Traits Basics"
grid_size: "25x20"
start_position: [1, 1]
max_turns: 0
fog_of_war: true
income_per_square: 1

obstacles: 41
enemies:
  - start_location: [23, 18]
    movement_pattern: "horizontal"
    moving_positive: false
  - start_location: [24, 37]
    movement_pattern: "vertical"
    moving_positive: true
  - start_location: [22, 38]
    movement_pattern: "circular"
    moving_positive: true
  - start_location: [24, 34]
    movement_pattern: "horizontal"
    moving_positive: false
  - start_location: [24, 34]
    movement_pattern: "vertical"
    moving_positive: true
  - start_location: [23, 31]
    movement_pattern: "circular"
    moving_positive: false
  - start_location: [24, 38]
    movement_pattern: "horizontal"
    moving_positive: true
  - start_location: [24, 32]
    movement_pattern: "vertical"
    moving_positive: false

doors:
  - [23, 40]
  - [23, 39]
  - [24, 36]
  - [23, 35]
  - [24, 38]
  - [24, 29]
  - [24, 36]

items:
  - name: "trait_definition_tip"
    item_file: "items/trait_definition.rs"
    spawn_randomly: false
    location: [24, 39]
  - name: "trait_implementation_tip"
    item_file: "items/trait_implementation.rs"
    spawn_randomly: false
    location: [23, 37]
  - name: "trait_bounds_tip"
    item_file: "items/trait_bounds.rs"
    spawn_randomly: false
    location: [24, 41]
  - name: "default_implementations_tip"
    item_file: "items/default_implementations.rs"
    spawn_randomly: false
    location: [24, 34]
  - name: "derive_traits_tip"
    item_file: "items/derive_traits.rs"
    spawn_randomly: false
    location: [23, 33]
  - name: "standard_traits_tip"
    item_file: "items/standard_traits.rs"
    spawn_randomly: false
    location: [24, 31]
  - name: "goal_item"
    item_file: "items/level_complete.rs"
    spawn_randomly: false
    location: [24, 39]

message: "Enter the world of Traits - Rust's approach to shared behavior! Define common functionality that multiple types can implement. Learn trait bounds, default implementations, and derive macros."

hint_message: "Traits: Define shared behavior with 'trait Name { fn method(&self) }'. Implement with 'impl TraitName for Type'. Use trait bounds: 'fn func<T: Trait>(x: T)'. Derive common traits with #[derive(...)]."