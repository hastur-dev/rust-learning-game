name: "Level 45 - Operator Overloading"
grid_size: "25x20"
start_position: [1, 1]
max_turns: 0
fog_of_war: true
income_per_square: 1

obstacles: 45
enemies:
  - start_location: [23, 18]
    movement_pattern: "horizontal"
    moving_positive: false
  - start_location: [24, 41]
    movement_pattern: "vertical"
    moving_positive: true
  - start_location: [22, 42]
    movement_pattern: "circular"
    moving_positive: true
  - start_location: [24, 38]
    movement_pattern: "horizontal"
    moving_positive: false
  - start_location: [24, 38]
    movement_pattern: "vertical"
    moving_positive: true
  - start_location: [23, 35]
    movement_pattern: "circular"
    moving_positive: false
  - start_location: [24, 42]
    movement_pattern: "horizontal"
    moving_positive: true
  - start_location: [24, 36]
    movement_pattern: "vertical"
    moving_positive: false

doors:
  - [23, 44]
  - [23, 43]
  - [24, 40]
  - [23, 39]
  - [24, 42]
  - [24, 33]
  - [24, 40]

items:
  - name: "arithmetic_ops_tip"
    item_file: "items/arithmetic_ops.rs"
    spawn_randomly: false
    location: [24, 43]
  - name: "comparison_ops_tip"
    item_file: "items/comparison_ops.rs"
    spawn_randomly: false
    location: [23, 41]
  - name: "index_ops_tip"
    item_file: "items/index_ops.rs"
    spawn_randomly: false
    location: [24, 45]
  - name: "deref_ops_tip"
    item_file: "items/deref_ops.rs"
    spawn_randomly: false
    location: [24, 38]
  - name: "assignment_ops_tip"
    item_file: "items/assignment_ops.rs"
    spawn_randomly: false
    location: [23, 37]
  - name: "display_debug_ops_tip"
    item_file: "items/display_debug_ops.rs"
    spawn_randomly: false
    location: [24, 35]
  - name: "goal_item"
    item_file: "items/level_complete.rs"
    spawn_randomly: false
    location: [24, 43]

message: "Make your types feel native with operator overloading! Implement standard operators through traits like Add, Sub, Index, and Deref. Create intuitive APIs that feel natural to use."

hint_message: "Operator overloading: Implement traits like Add (+), Sub (-), Mul (*), Index ([]), Deref (*). std::ops module contains all operator traits. Makes custom types feel built-in."